{
  "contractName": "MockCosmosBridgeUpgrade",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_bridgeBank",
          "type": "address"
        }
      ],
      "name": "LogBridgeBankSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_cosmosSender",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "_ethereumReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "LogNewProphecyClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "LogOracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        }
      ],
      "name": "LogProphecyCompleted",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeBank",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasBridgeBank",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasOracle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_valset",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        }
      ],
      "name": "isProphecyClaimActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_prophecyID",
          "type": "uint256"
        }
      ],
      "name": "isProphecyClaimValidatorActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "_claimType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_cosmosSenderSequence",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_ethereumReceiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "newProphecyClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "prophecyClaimCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prophecyClaims",
      "outputs": [
        {
          "internalType": "enum CosmosBridgeStorage.ClaimType",
          "name": "claimType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "ethereumReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "originalValidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum CosmosBridgeStorage.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_bridgeBank",
          "type": "address"
        }
      ],
      "name": "setBridgeBank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usedNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "valset",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "tokenFaucet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_bridgeBank\",\"type\":\"address\"}],\"name\":\"LogBridgeBankSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_cosmosSender\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_ethereumReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogNewProphecyClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"LogOracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"}],\"name\":\"LogProphecyCompleted\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeBank\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasBridgeBank\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasOracle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_valset\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"}],\"name\":\"isProphecyClaimActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prophecyID\",\"type\":\"uint256\"}],\"name\":\"isProphecyClaimValidatorActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_cosmosSenderSequence\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_ethereumReceiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"newProphecyClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prophecyClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prophecyClaims\",\"outputs\":[{\"internalType\":\"enum CosmosBridgeStorage.ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"ethereumReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originalValidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum CosmosBridgeStorage.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_bridgeBank\",\"type\":\"address\"}],\"name\":\"setBridgeBank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tokenFaucet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"valset\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"}}},\"userdoc\":{\"methods\":{},\"notice\":\"Add a token to the cosmos bridge to test that upgrades work correctly\"}},\"settings\":{\"compilationTarget\":{\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol\":\"MockCosmosBridgeUpgrade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/BankStorage.sol\":{\"keccak256\":\"0x987ee01c37b1294760eb3c9cb00f4d6296d0aff6dcc31129659f8aa140d54777\",\"urls\":[\"bzz-raw://c633f06da88844ff666a79b770719ca869ac95e2a53cc0be3e18d322fd46af7a\",\"dweb:/ipfs/QmVhZDEzKjpTZYxdLWfChRkfcQMEsZstdaWq8dFy26XtXk\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/BridgeBank.sol\":{\"keccak256\":\"0x7ffc9579ec55e6597797203dfd7acaf105f7e1e484130e3e13368147f47ba063\",\"urls\":[\"bzz-raw://07893fe08af8b346b8dbdd9eda0e6a2c335fde48eb8e2ed65cb90e29ce69ea3c\",\"dweb:/ipfs/Qma6uQAz2sTVw1rZuYxJxhCaBxF6Zzos6nJmNW8iTvxxH1\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/BridgeToken.sol\":{\"keccak256\":\"0x9103ff62316840e8adbb11dd86bccf08f5770db9ea64b60a062100b493baad0d\",\"urls\":[\"bzz-raw://475bdb2e962297866eb173d997fca04b91bcae11b9708e7d1f516f3188308eee\",\"dweb:/ipfs/QmNpAkq3Uo6Q37JGcyqdDw782RgnA7dWfsD9QvTrFakBs8\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosBank.sol\":{\"keccak256\":\"0x24791157e6e9e62308dafa96a0aabbfff276b12190b49ba2a7506031fca32cc0\",\"urls\":[\"bzz-raw://3c20406583b6a7295dc6e540de68adcaade2b0565b576cba0d87122ea9fa575b\",\"dweb:/ipfs/QmUF4TfmiFP2tNHxn5PichP3bQPwt7uSfvKAbUPk1s3U9H\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosBankStorage.sol\":{\"keccak256\":\"0x5005339773232d4a1268b595d4812afdec572519f84f621b54859fc9b80e646f\",\"urls\":[\"bzz-raw://4e3d5b75f86c0cdd6c41a2a2ad26421503c82ce34f701f31219fe9b82f801431\",\"dweb:/ipfs/QmVJo5hLg8j5vdHPYN68FuojNEdaUcb5R6znEeoyd8F1pf\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosWhiteList.sol\":{\"keccak256\":\"0x5df984d75dc643f31abe5d156bcb462bcad55b84313e4ea7b1d166f8b9e3e45a\",\"urls\":[\"bzz-raw://5dad4dd77e6090bc654803f6ec714e484327a42884f47a8236dbc85324fb21f7\",\"dweb:/ipfs/QmZbqLCyNf3uYiVukNsTy5E1EpzghrFvEsEPyfDjAKiGUf\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/CosmosWhiteListStorage.sol\":{\"keccak256\":\"0x1680292edf8d735fccfcfa9327b8dbbd0c673b509c701f9aaa1032a74de8ad8b\",\"urls\":[\"bzz-raw://b9695fceafb1ff4066e80a7be9003155565c4abebdba38b2aa027b5d7d0e95e9\",\"dweb:/ipfs/QmS8aZFBtfPJgZpaAx2LZ5i6xBBK6A4RLL2xuz3RRWLpDw\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumBank.sol\":{\"keccak256\":\"0x1a695de4908ae011d1e7b3753b460f2037e8b2ca338ba956fdad22551ca5ba26\",\"urls\":[\"bzz-raw://7a917a9598e3205b923e121af765957d3f8bb2ba684f4804eb48d2cd1bf8cc66\",\"dweb:/ipfs/QmPrjs8zrrH7JTuodvE2y33quv8GCYW4nyG9Ckm2XcMoaJ\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumBankStorage.sol\":{\"keccak256\":\"0xad669b0998e71040c0f2b718924876fb84ddcf5ac00e25b3c26c2c9634d975e3\",\"urls\":[\"bzz-raw://f62572a257817e4b501be47cd5eb6c1b29deba468cb0041644131443c523f4f5\",\"dweb:/ipfs/QmWf1WNayafDLtNZQQtLDrvtoZY6CyeSvDVefcgGSSVnXH\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/BridgeBank/EthereumWhitelist.sol\":{\"keccak256\":\"0xf804cf9adafc9ed3820050a5dbcf9a01239ff24e8c6f2f687de84b0296df15e8\",\"urls\":[\"bzz-raw://95d93ec9c8bd96f519d5b3a9411f8866cfd4a759db0cfbef563bef18304370b9\",\"dweb:/ipfs/QmUx8PF42m7vZWTqFPSEhyt452kcf1kD7N3BRMCyeyGsS4\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol\":{\"keccak256\":\"0x8238c2ac6e42e08d9c8a68ea07f929360d18e698c4ab3e82c2d42a50040c4f6c\",\"urls\":[\"bzz-raw://3effc1f05fb63b29820660b992317ecba57730af2e2abbaa7e82cfcf8161a06b\",\"dweb:/ipfs/QmVfHTdcvQigWb5mrdLXwPoBsZ3qknbAB7Bf8KTbj3dxpJ\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/CosmosBridgeStorage.sol\":{\"keccak256\":\"0x3ad904747a2448e39954761e92721160bd63bdea39debfc47b699cf1bc352654\",\"urls\":[\"bzz-raw://0c24d61d8fd12730489b0cff7b5e08d70887da6f933f5124f380993d20842bea\",\"dweb:/ipfs/QmVyDycy1jwESzPcEf5Cyw2pjbKmHbGztaUZ72NtVY6J9R\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol\":{\"keccak256\":\"0x915e766ac1b3d02aafcc193556bb020894addde0d6f152061dc073b0c3e98b96\",\"urls\":[\"bzz-raw://3167d8b562dcfe292162c702378976a578b7eead87243ac7474679902626f106\",\"dweb:/ipfs/QmTZw6MAaP6QvHSEMrPwvoig89PrDuRigumAGcGqseNQ8k\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/Oracle.sol\":{\"keccak256\":\"0xa1231d228d564bb9c4a5ea69bdf12e0527fca7dbf00633f0af2532ed36b472de\",\"urls\":[\"bzz-raw://ece7b166226eefc4e2fc0645cffb95d216b44cbb9b5d3e1470f7ce94615b1c81\",\"dweb:/ipfs/QmPLwDw3xdkVqx9s5MYYJ2yGYwZYqXgd4P4bWxaCcg4Wk4\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/OracleStorage.sol\":{\"keccak256\":\"0x921654252a2aa189bb5c0f87d30032fe445425e1a6bba69076d577a1fd4eaa4f\",\"urls\":[\"bzz-raw://e0850963632ca18d321d11fccb5e15d8892830666dafd81f61aa72cb1b54ce11\",\"dweb:/ipfs/QmefegfxDub2GfpmNooGWLR5SBvpGY5bhD3vFrptRyeBg9\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/Valset.sol\":{\"keccak256\":\"0x2afa33f8ccbb41967192e1e31565d9acf1dbf127a5d935e87a16dc5e3563d855\",\"urls\":[\"bzz-raw://1aa077bc3297e0a98bd4f8b0396de5305c669187683ad07036ac7402d76f7acb\",\"dweb:/ipfs/QmbW2Fpir7HPV2sLGoof1gGPr2R1FuG3QnDBHUazPfVz2K\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/ValsetStorage.sol\":{\"keccak256\":\"0xccafbc8b29a4a92054107f448727d2c0938d9da566489ee812cf38de274e846c\",\"urls\":[\"bzz-raw://29231864e69fcb2ffa7e106151536ba660df50f14edc47c7ae7e629d2f8e7c0f\",\"dweb:/ipfs/QmUXKVPRgHGYu5WT8LQdLyiWiXHmLi6SKhBCn1vo22TgxY\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9b94356691f3cbf90a5d83ae3fdf6a5a662bb004d2bd8b034160d60221807e64\",\"urls\":[\"bzz-raw://14a9d33db455302b8bb9fdb28998efefbe5a1cb41b29e31391609f646b2ab351\",\"dweb:/ipfs/Qmd4wFr6GEMZnnxgXeq3gmp7cs8tqDuHp3TVNhCbjnux2V\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzz-raw://c44ae0ad1bce141c33b962f8b4e9228bdf8df36c8ac363b4f0bf9498b8bfc32a\",\"dweb:/ipfs/QmcSBRdFwVvy2wFZrBwo5cvqNP4UHh9Eyzf8jnxBgnPqfe\"]},\"/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612221806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637f54af0c116100a25780639723fb6d116100715780639723fb6d146103a2578063a9059cbb146103bf578063d8da69ea146103eb578063db4237af14610408578063fb7831f21461055957610116565b80637f54af0c14610364578063814c92c31461036c57806389eb068a146103925780638ea5352d1461039a57610116565b80635d4c66a3116100e95780635d4c66a3146101a857806369294a4e146102f657806370a08231146102fe5780637adbf973146103365780637dc0d1d01461035c57610116565b80630e41f3731461011b578063485cc9551461013f578063529f3dd21461016f578063570ca735146101a0575b600080fd5b610123610561565b604080516001600160a01b039092168252519081900360200190f35b61016d6004803603604081101561015557600080fd5b506001600160a01b0381358116916020013516610570565b005b61018c6004803603602081101561018557600080fd5b503561063b565b604080519115158252519081900360200190f35b6101236106ca565b61016d600480360360c08110156101be57600080fd5b60ff82351691908101906040810160208201356401000000008111156101e357600080fd5b8201836020820111156101f557600080fd5b8035906020019184600183028401116401000000008311171561021757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b036020870135169591945092506060810191506040013564010000000081111561027f57600080fd5b82018360208201111561029157600080fd5b803590602001918460018302840111640100000000831117156102b357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506106d9915050565b61018c6111e7565b6103246004803603602081101561031457600080fd5b50356001600160a01b03166111f7565b60408051918252519081900360200190f35b61016d6004803603602081101561034c57600080fd5b50356001600160a01b0316611212565b61012361131b565b61012361132a565b61016d6004803603602081101561038257600080fd5b50356001600160a01b0316611339565b61016d611442565b610324611453565b61018c600480360360208110156103b857600080fd5b5035611459565b61018c600480360360408110156103d557600080fd5b506001600160a01b03813516906020013561146e565b61018c6004803603602081101561040157600080fd5b5035611484565b6104256004803603602081101561041e57600080fd5b50356114ae565b6040518089600281111561043557fe5b60ff1681526001600160a01b03808916604083015287811660608301528616608082015260c08101849052602081019060a081019060e00184600381111561047957fe5b60ff16815260200183810383528a818151815260200191508051906020019080838360005b838110156104b657818101518382015260200161049e565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156105165781810151838201526020016104fe565b50505050905090810190601f1680156105435780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61018c61161f565b6004546001600160a01b031681565b606c5460ff16156105b6576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b604080518082019091526001808252606560f81b60209092019182526105de91600091611fa9565b506000600555600180546001600160a01b039384166001600160a01b031991821617825560028054939094169216919091179091556003805460ff60a01b19908116909155600480549091169055606c805460ff19169091179055565b6002546000828152600760209081526040808320600301548151631015428760e21b81526001600160a01b0391821660048201529151939416926340550a1c92602480840193919291829003018186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d60208110156106c257600080fd5b505192915050565b6001546001600160a01b031681565b600354600160a01b900460ff16151560011480156107055750600454600160a01b900460ff1615156001145b6107405760405162461bcd60e51b81526004018080602001828103825260468152602001806120ac6046913960600191505060405180910390fd5b60025460408051631015428760e21b815233600482015290516001600160a01b03909216916340550a1c91602480820192602092909190829003018186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b5051610808576040805162461bcd60e51b815260206004820152601b60248201527f4d75737420626520616e206163746976652076616c696461746f720000000000604482015290519081900360640190fd5b6000808787878787876040516020018087600281111561082457fe5b60ff1660f81b815260010186805190602001908083835b6020831061085a5780518252601f19909201916020918201910161083b565b51815160209384036101000a60001901801990921691161790529201878152606087901b6bffffffffffffffffffffffff1916818401528551603490910192860191508083835b602083106108c05780518252601f1990920191602091820191016108a1565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201815283519382019390932060008181526006909252929020549197505060ff1615945061099f935050505057600354604080516368e9420d60e11b81526004810184905233602482015290516001600160a01b039092169163d1d2841a916044808201926020929091908290030181600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b505050506040513d602081101561099657600080fd5b505191506111ce565b6000606060018a60028111156109b157fe5b1415610bac5760048054604051635acba65560e01b8152602092810183815289516024830152895189946001600160a01b0390941693635acba655938c9392839260449092019185019080838360005b83811015610a19578181015183820152602001610a01565b50505050905090810190601f168015610a465780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610a6357600080fd5b505afa158015610a77573d6000803e3d6000fd5b505050506040513d6020811015610a8d57600080fd5b50511015610acc5760405162461bcd60e51b815260040180806020018281038252603a81526020018061218e603a913960400191505060405180910390fd5b506004805460405163050fcdb360e11b8152602092810183815288516024830152885189946001600160a01b0390941693630a1f9b6693869392839260449092019185019080838360005b83811015610b2f578181015183820152602001610b17565b50505050905090810190601f168015610b5c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d6020811015610ba357600080fd5b50519150610e63565b60028a6002811115610bba57fe5b1415610e2c5760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152610c589390929091830182828015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b50505050508761162f565b6004805460405163ebb73ca960e01b815260209281018381528451602483015284519495506000946001600160a01b039093169363ebb73ca99387938392604490910191908501908083838b5b83811015610cbd578181015183820152602001610ca5565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610d0757600080fd5b505afa158015610d1b573d6000803e3d6000fd5b505050506040513d6020811015610d3157600080fd5b505190506001600160a01b038116610e2257600480546040516350b06e4d60e01b815260209281018381528551602483015285516001600160a01b03909316936350b06e4d93879383926044909101919085019080838360005b83811015610da3578181015183820152602001610d8b565b50505050905090810190601f168015610dd05780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b505050506040513d6020811015610e1957600080fd5b50519250610e26565b8092505b50610e63565b60405162461bcd60e51b81526004018080602001828103825260358152602001806121596035913960400191505060405180910390fd5b610e6b612027565b6040518061010001604052808c6002811115610e8357fe5b8152602081018c90526001600160a01b03808b1660408301523360608301528516608082015260a0810184905260c0810188905260e00160019052600554909150610ed590600163ffffffff6116ea16565b60055560008481526007602052604090208151815483929190829060ff19166001836002811115610f0257fe5b02179055506020828101518051610f1f9260018501920190611fa9565b5060408201516002820180546001600160a01b039283166001600160a01b0319918216179091556060840151600384018054918416918316919091179055608084015160048401805491909316911617905560a08201518051610f8c916005840191602090910190611fa9565b5060c0820151600682015560e082015160078201805460ff19166001836003811115610fb457fe5b02179055509050507f4c4b04a2b190e6bb01b6243f150fc76174861acd19cf98841801baaff5262dd8848c8c8b3388888d60405180898152602001886002811115610ffb57fe5b60ff16815260200180602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200180602001848152602001838103835289818151815260200191508051906020019080838360005b8381101561108e578181015183820152602001611076565b50505050905090810190601f1680156110bb5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156110ee5781810151838201526020016110d6565b50505050905090810190601f16801561111b5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a16000848152600660209081526040808320805460ff1916600117905560035481516368e9420d60e11b81526004810189905233602482015291516001600160a01b039091169363d1d2841a93604480850194919392918390030190829087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506040513d60208110156111c657600080fd5b505194505050505b81156111dd576111dd8161174b565b5050505050505050565b600454600160a01b900460ff1681565b6001600160a01b0316600090815260d2602052604090205490565b6001546001600160a01b03163314611269576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600354600160a01b900460ff16156112b25760405162461bcd60e51b81526004018080602001828103825260318152602001806121286031913960400191505060405180910390fd5b60038054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f6efb0434342713e2e9b1501dbebf76b4ed18406ea77ab5d56535cc26dec3adc0916020908290030190a150565b6003546001600160a01b031681565b6002546001600160a01b031681565b6001546001600160a01b03163314611390576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600454600160a01b900460ff16156113d95760405162461bcd60e51b81526004018080602001828103825260368152602001806120f26036913960400191505060405180910390fd5b60048054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517fc8b65043fb196ac032b79a435397d1d14a96b4e9d12e366c3b1f550cb01d2dfa916020908290030190a150565b6114513364174876e80061184b565b565b60055481565b60066020526000908152604090205460ff1681565b600061147b3384846118d0565b50600192915050565b60008181526007602081905260408220015460019060ff1660038111156114a757fe5b1492915050565b6007602090815260009182526040918290208054600180830180548651600261010094831615949094026000190190911692909204601f810186900486028301860190965285825260ff9092169492939092908301828280156115525780601f1061152757610100808354040283529160200191611552565b820191906000526020600020905b81548152906001019060200180831161153557829003601f168201915b50505050600283810154600385015460048601546005870180546040805160206101006001851615026000190190931697909704601f810183900483028801830190915280875297986001600160a01b0395861698948616975094909216949290918301828280156116055780601f106115da57610100808354040283529160200191611605565b820191906000526020600020905b8154815290600101906020018083116115e857829003601f168201915b50505050600683015460079093015491929160ff16905088565b600354600160a01b900460ff1681565b606082826040516020018083805190602001908083835b602083106116655780518252601f199092019160209182019101611646565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106116ad5780518252601f19909201916020918201910161168e565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b600082820183811015611744576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b8061175581611484565b6117a6576040805162461bcd60e51b815260206004820152601c60248201527f50726f706865637920636c61696d206973206e6f742061637469766500000000604482015290519081900360640190fd5b6000828152600760208190526040909120908101805460ff19166002908117909155905460ff169060019082908111156117dc57fe5b14156117f0576117eb8361198c565b6117f9565b6117f983611c56565b7f79e7c1c0bd54f11809c3bf6023c242783602d61ceff272c6bba6f8559c24ad0d83826040518083815260200182600281111561183257fe5b60ff1681526020019250505060405180910390a1505050565b6001600160a01b0382166118a6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60d18054820190556001600160a01b03909116600090815260d26020526040902080549091019055565b6001600160a01b0383166119155760405162461bcd60e51b81526004018080602001828103825260258152602001806121c86025913960400191505060405180910390fd5b6001600160a01b03821661195a5760405162461bcd60e51b81526004018080602001828103825260238152602001806120896023913960400191505060405180910390fd5b6001600160a01b03928316600090815260d2602052604080822080548490039055929093168352912080549091019055565b611994612027565b60008281526007602052604090819020815161010081019092528054829060ff1660028111156119c057fe5b60028111156119cb57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a685780601f10611a3d57610100808354040283529160200191611a68565b820191906000526020600020905b815481529060010190602001808311611a4b57829003601f168201915b50505091835250506002828101546001600160a01b03908116602080850191909152600385015482166040808601919091526004860154909216606085015260058501805483516101006001831615026000190190911694909404601f81018390048302850183019093528284526080909401939190830182828015611b2f5780601f10611b0457610100808354040283529160200191611b2f565b820191906000526020600020905b815481529060010190602001808311611b1257829003601f168201915b505050918352505060068201546020820152600782015460409091019060ff166003811115611b5a57fe5b6003811115611b6557fe5b9052506004805460408084015160a085015160c08601519251633816622960e21b81526001600160a01b038381169682019687526044820185905260606024830190815283516064840152835198995095169663e05988a4969395929493929160840190602086019080838360005b83811015611bec578181015183820152602001611bd4565b50505050905090810190601f168015611c195780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015611c3a57600080fd5b505af1158015611c4e573d6000803e3d6000fd5b505050505050565b611c5e612027565b60008281526007602052604090819020815161010081019092528054829060ff166002811115611c8a57fe5b6002811115611c9557fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d325780601f10611d0757610100808354040283529160200191611d32565b820191906000526020600020905b815481529060010190602001808311611d1557829003601f168201915b50505091835250506002828101546001600160a01b03908116602080850191909152600385015482166040808601919091526004860154909216606085015260058501805483516101006001831615026000190190911694909404601f81018390048302850183019093528284526080909401939190830182828015611df95780601f10611dce57610100808354040283529160200191611df9565b820191906000526020600020905b815481529060010190602001808311611ddc57829003601f168201915b505050918352505060068201546020820152600782015460409091019060ff166003811115611e2457fe5b6003811115611e2f57fe5b815250509050600460009054906101000a90046001600160a01b03166001600160a01b031663cdf68c418260200151836040015184608001518560a001518660c001516040518663ffffffff1660e01b81526004018080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200180602001848152602001838103835288818151815260200191508051906020019080838360005b83811015611ef8578181015183820152602001611ee0565b50505050905090810190601f168015611f255780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015611f58578181015183820152602001611f40565b50505050905090810190601f168015611f855780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b158015611c3a57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fea57805160ff1916838001178555612017565b82800160010185558215612017579182015b82811115612017578251825591602001919060010190611ffc565b5061202392915061206b565b5090565b604080516101008101825260008082526060602083018190529282018190528282018190526080820181905260a082019290925260c081018290529060e082015290565b61208591905b808211156120235760008155600101612071565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373546865204f70657261746f72206d7573742073657420746865206f7261636c6520616e64206272696467652062616e6b20666f72206272696467652061637469766174696f6e546865204272696467652042616e6b2063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574546865204f7261636c652063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574496e76616c696420636c61696d20747970652c206f6e6c79206275726e20616e64206c6f636b2061726520737570706f727465642e4e6f7420656e6f756768206c6f636b65642061737365747320746f20636f6d706c657465207468652070726f706f7365642070726f706865637945524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373a265627a7a72315820b13559b44abf69270eba725b19c8d4c96ab3bbac2d6dea3af39108d5d883dac764736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80637f54af0c116100a25780639723fb6d116100715780639723fb6d146103a2578063a9059cbb146103bf578063d8da69ea146103eb578063db4237af14610408578063fb7831f21461055957610116565b80637f54af0c14610364578063814c92c31461036c57806389eb068a146103925780638ea5352d1461039a57610116565b80635d4c66a3116100e95780635d4c66a3146101a857806369294a4e146102f657806370a08231146102fe5780637adbf973146103365780637dc0d1d01461035c57610116565b80630e41f3731461011b578063485cc9551461013f578063529f3dd21461016f578063570ca735146101a0575b600080fd5b610123610561565b604080516001600160a01b039092168252519081900360200190f35b61016d6004803603604081101561015557600080fd5b506001600160a01b0381358116916020013516610570565b005b61018c6004803603602081101561018557600080fd5b503561063b565b604080519115158252519081900360200190f35b6101236106ca565b61016d600480360360c08110156101be57600080fd5b60ff82351691908101906040810160208201356401000000008111156101e357600080fd5b8201836020820111156101f557600080fd5b8035906020019184600183028401116401000000008311171561021757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b036020870135169591945092506060810191506040013564010000000081111561027f57600080fd5b82018360208201111561029157600080fd5b803590602001918460018302840111640100000000831117156102b357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506106d9915050565b61018c6111e7565b6103246004803603602081101561031457600080fd5b50356001600160a01b03166111f7565b60408051918252519081900360200190f35b61016d6004803603602081101561034c57600080fd5b50356001600160a01b0316611212565b61012361131b565b61012361132a565b61016d6004803603602081101561038257600080fd5b50356001600160a01b0316611339565b61016d611442565b610324611453565b61018c600480360360208110156103b857600080fd5b5035611459565b61018c600480360360408110156103d557600080fd5b506001600160a01b03813516906020013561146e565b61018c6004803603602081101561040157600080fd5b5035611484565b6104256004803603602081101561041e57600080fd5b50356114ae565b6040518089600281111561043557fe5b60ff1681526001600160a01b03808916604083015287811660608301528616608082015260c08101849052602081019060a081019060e00184600381111561047957fe5b60ff16815260200183810383528a818151815260200191508051906020019080838360005b838110156104b657818101518382015260200161049e565b50505050905090810190601f1680156104e35780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156105165781810151838201526020016104fe565b50505050905090810190601f1680156105435780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b61018c61161f565b6004546001600160a01b031681565b606c5460ff16156105b6576040805162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b604482015290519081900360640190fd5b604080518082019091526001808252606560f81b60209092019182526105de91600091611fa9565b506000600555600180546001600160a01b039384166001600160a01b031991821617825560028054939094169216919091179091556003805460ff60a01b19908116909155600480549091169055606c805460ff19169091179055565b6002546000828152600760209081526040808320600301548151631015428760e21b81526001600160a01b0391821660048201529151939416926340550a1c92602480840193919291829003018186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d60208110156106c257600080fd5b505192915050565b6001546001600160a01b031681565b600354600160a01b900460ff16151560011480156107055750600454600160a01b900460ff1615156001145b6107405760405162461bcd60e51b81526004018080602001828103825260468152602001806120ac6046913960600191505060405180910390fd5b60025460408051631015428760e21b815233600482015290516001600160a01b03909216916340550a1c91602480820192602092909190829003018186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b5051610808576040805162461bcd60e51b815260206004820152601b60248201527f4d75737420626520616e206163746976652076616c696461746f720000000000604482015290519081900360640190fd5b6000808787878787876040516020018087600281111561082457fe5b60ff1660f81b815260010186805190602001908083835b6020831061085a5780518252601f19909201916020918201910161083b565b51815160209384036101000a60001901801990921691161790529201878152606087901b6bffffffffffffffffffffffff1916818401528551603490910192860191508083835b602083106108c05780518252601f1990920191602091820191016108a1565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201815283519382019390932060008181526006909252929020549197505060ff1615945061099f935050505057600354604080516368e9420d60e11b81526004810184905233602482015290516001600160a01b039092169163d1d2841a916044808201926020929091908290030181600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b505050506040513d602081101561099657600080fd5b505191506111ce565b6000606060018a60028111156109b157fe5b1415610bac5760048054604051635acba65560e01b8152602092810183815289516024830152895189946001600160a01b0390941693635acba655938c9392839260449092019185019080838360005b83811015610a19578181015183820152602001610a01565b50505050905090810190601f168015610a465780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610a6357600080fd5b505afa158015610a77573d6000803e3d6000fd5b505050506040513d6020811015610a8d57600080fd5b50511015610acc5760405162461bcd60e51b815260040180806020018281038252603a81526020018061218e603a913960400191505060405180910390fd5b506004805460405163050fcdb360e11b8152602092810183815288516024830152885189946001600160a01b0390941693630a1f9b6693869392839260449092019185019080838360005b83811015610b2f578181015183820152602001610b17565b50505050905090810190601f168015610b5c5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d6020811015610ba357600080fd5b50519150610e63565b60028a6002811115610bba57fe5b1415610e2c5760008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152610c589390929091830182828015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b50505050508761162f565b6004805460405163ebb73ca960e01b815260209281018381528451602483015284519495506000946001600160a01b039093169363ebb73ca99387938392604490910191908501908083838b5b83811015610cbd578181015183820152602001610ca5565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610d0757600080fd5b505afa158015610d1b573d6000803e3d6000fd5b505050506040513d6020811015610d3157600080fd5b505190506001600160a01b038116610e2257600480546040516350b06e4d60e01b815260209281018381528551602483015285516001600160a01b03909316936350b06e4d93879383926044909101919085019080838360005b83811015610da3578181015183820152602001610d8b565b50505050905090810190601f168015610dd05780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b505050506040513d6020811015610e1957600080fd5b50519250610e26565b8092505b50610e63565b60405162461bcd60e51b81526004018080602001828103825260358152602001806121596035913960400191505060405180910390fd5b610e6b612027565b6040518061010001604052808c6002811115610e8357fe5b8152602081018c90526001600160a01b03808b1660408301523360608301528516608082015260a0810184905260c0810188905260e00160019052600554909150610ed590600163ffffffff6116ea16565b60055560008481526007602052604090208151815483929190829060ff19166001836002811115610f0257fe5b02179055506020828101518051610f1f9260018501920190611fa9565b5060408201516002820180546001600160a01b039283166001600160a01b0319918216179091556060840151600384018054918416918316919091179055608084015160048401805491909316911617905560a08201518051610f8c916005840191602090910190611fa9565b5060c0820151600682015560e082015160078201805460ff19166001836003811115610fb457fe5b02179055509050507f4c4b04a2b190e6bb01b6243f150fc76174861acd19cf98841801baaff5262dd8848c8c8b3388888d60405180898152602001886002811115610ffb57fe5b60ff16815260200180602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200180602001848152602001838103835289818151815260200191508051906020019080838360005b8381101561108e578181015183820152602001611076565b50505050905090810190601f1680156110bb5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156110ee5781810151838201526020016110d6565b50505050905090810190601f16801561111b5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a16000848152600660209081526040808320805460ff1916600117905560035481516368e9420d60e11b81526004810189905233602482015291516001600160a01b039091169363d1d2841a93604480850194919392918390030190829087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506040513d60208110156111c657600080fd5b505194505050505b81156111dd576111dd8161174b565b5050505050505050565b600454600160a01b900460ff1681565b6001600160a01b0316600090815260d2602052604090205490565b6001546001600160a01b03163314611269576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600354600160a01b900460ff16156112b25760405162461bcd60e51b81526004018080602001828103825260318152602001806121286031913960400191505060405180910390fd5b60038054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f6efb0434342713e2e9b1501dbebf76b4ed18406ea77ab5d56535cc26dec3adc0916020908290030190a150565b6003546001600160a01b031681565b6002546001600160a01b031681565b6001546001600160a01b03163314611390576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903a34329037b832b930ba37b91760591b604482015290519081900360640190fd5b600454600160a01b900460ff16156113d95760405162461bcd60e51b81526004018080602001828103825260368152602001806120f26036913960400191505060405180910390fd5b60048054600160a01b60ff60a01b19909116176001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517fc8b65043fb196ac032b79a435397d1d14a96b4e9d12e366c3b1f550cb01d2dfa916020908290030190a150565b6114513364174876e80061184b565b565b60055481565b60066020526000908152604090205460ff1681565b600061147b3384846118d0565b50600192915050565b60008181526007602081905260408220015460019060ff1660038111156114a757fe5b1492915050565b6007602090815260009182526040918290208054600180830180548651600261010094831615949094026000190190911692909204601f810186900486028301860190965285825260ff9092169492939092908301828280156115525780601f1061152757610100808354040283529160200191611552565b820191906000526020600020905b81548152906001019060200180831161153557829003601f168201915b50505050600283810154600385015460048601546005870180546040805160206101006001851615026000190190931697909704601f810183900483028801830190915280875297986001600160a01b0395861698948616975094909216949290918301828280156116055780601f106115da57610100808354040283529160200191611605565b820191906000526020600020905b8154815290600101906020018083116115e857829003601f168201915b50505050600683015460079093015491929160ff16905088565b600354600160a01b900460ff1681565b606082826040516020018083805190602001908083835b602083106116655780518252601f199092019160209182019101611646565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106116ad5780518252601f19909201916020918201910161168e565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b600082820183811015611744576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b8061175581611484565b6117a6576040805162461bcd60e51b815260206004820152601c60248201527f50726f706865637920636c61696d206973206e6f742061637469766500000000604482015290519081900360640190fd5b6000828152600760208190526040909120908101805460ff19166002908117909155905460ff169060019082908111156117dc57fe5b14156117f0576117eb8361198c565b6117f9565b6117f983611c56565b7f79e7c1c0bd54f11809c3bf6023c242783602d61ceff272c6bba6f8559c24ad0d83826040518083815260200182600281111561183257fe5b60ff1681526020019250505060405180910390a1505050565b6001600160a01b0382166118a6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60d18054820190556001600160a01b03909116600090815260d26020526040902080549091019055565b6001600160a01b0383166119155760405162461bcd60e51b81526004018080602001828103825260258152602001806121c86025913960400191505060405180910390fd5b6001600160a01b03821661195a5760405162461bcd60e51b81526004018080602001828103825260238152602001806120896023913960400191505060405180910390fd5b6001600160a01b03928316600090815260d2602052604080822080548490039055929093168352912080549091019055565b611994612027565b60008281526007602052604090819020815161010081019092528054829060ff1660028111156119c057fe5b60028111156119cb57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a685780601f10611a3d57610100808354040283529160200191611a68565b820191906000526020600020905b815481529060010190602001808311611a4b57829003601f168201915b50505091835250506002828101546001600160a01b03908116602080850191909152600385015482166040808601919091526004860154909216606085015260058501805483516101006001831615026000190190911694909404601f81018390048302850183019093528284526080909401939190830182828015611b2f5780601f10611b0457610100808354040283529160200191611b2f565b820191906000526020600020905b815481529060010190602001808311611b1257829003601f168201915b505050918352505060068201546020820152600782015460409091019060ff166003811115611b5a57fe5b6003811115611b6557fe5b9052506004805460408084015160a085015160c08601519251633816622960e21b81526001600160a01b038381169682019687526044820185905260606024830190815283516064840152835198995095169663e05988a4969395929493929160840190602086019080838360005b83811015611bec578181015183820152602001611bd4565b50505050905090810190601f168015611c195780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015611c3a57600080fd5b505af1158015611c4e573d6000803e3d6000fd5b505050505050565b611c5e612027565b60008281526007602052604090819020815161010081019092528054829060ff166002811115611c8a57fe5b6002811115611c9557fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d325780601f10611d0757610100808354040283529160200191611d32565b820191906000526020600020905b815481529060010190602001808311611d1557829003601f168201915b50505091835250506002828101546001600160a01b03908116602080850191909152600385015482166040808601919091526004860154909216606085015260058501805483516101006001831615026000190190911694909404601f81018390048302850183019093528284526080909401939190830182828015611df95780601f10611dce57610100808354040283529160200191611df9565b820191906000526020600020905b815481529060010190602001808311611ddc57829003601f168201915b505050918352505060068201546020820152600782015460409091019060ff166003811115611e2457fe5b6003811115611e2f57fe5b815250509050600460009054906101000a90046001600160a01b03166001600160a01b031663cdf68c418260200151836040015184608001518560a001518660c001516040518663ffffffff1660e01b81526004018080602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200180602001848152602001838103835288818151815260200191508051906020019080838360005b83811015611ef8578181015183820152602001611ee0565b50505050905090810190601f168015611f255780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015611f58578181015183820152602001611f40565b50505050905090810190601f168015611f855780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b158015611c3a57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fea57805160ff1916838001178555612017565b82800160010185558215612017579182015b82811115612017578251825591602001919060010190611ffc565b5061202392915061206b565b5090565b604080516101008101825260008082526060602083018190529282018190528282018190526080820181905260a082019290925260c081018290529060e082015290565b61208591905b808211156120235760008155600101612071565b9056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373546865204f70657261746f72206d7573742073657420746865206f7261636c6520616e64206272696467652062616e6b20666f72206272696467652061637469766174696f6e546865204272696467652042616e6b2063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574546865204f7261636c652063616e6e6f742062652075706461746564206f6e636520697420686173206265656e20736574496e76616c696420636c61696d20747970652c206f6e6c79206275726e20616e64206c6f636b2061726520737570706f727465642e4e6f7420656e6f756768206c6f636b65642061737365747320746f20636f6d706c657465207468652070726f706f7365642070726f706865637945524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373a265627a7a72315820b13559b44abf69270eba725b19c8d4c96ab3bbac2d6dea3af39108d5d883dac764736f6c63430005100032",
  "sourceMap": "2133:149:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:149:14;;;;;;;",
  "deployedSourceMap": "2133:149:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:149:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:33:12;;;:::i;:::-;;;;-1:-1:-1;;;;;716:33:12;;;;;;;;;;;;;;1945:343:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1945:343:11;;;;;;;;;;:::i;:::-;;8401:261;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8401:261:11;;:::i;:::-;;;;;;;;;;;;;;;;;;314:23:12;;;:::i;3326:2887:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3326:2887:11;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3326:2887:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3326:2887:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3326:2887:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3326:2887:11;;;;;-1:-1:-1;;;;;3326:2887:11;;;;;;;;-1:-1:-1;3326:2887:11;-1:-1:-1;3326:2887:11;;;;-1:-1:-1;3326:2887:11;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3326:2887:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3326:2887:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3326:2887:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3326:2887:11;;-1:-1:-1;;3326:2887:11;;;-1:-1:-1;3326:2887:11;;-1:-1:-1;;3326:2887:11:i;824:25:12:-;;;:::i;224:108:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;224:108:14;-1:-1:-1;;;;;224:108:14;;:::i;:::-;;;;;;;;;;;;;;;;2332:276:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2332:276:11;-1:-1:-1;;;;;2332:276:11;;:::i;516:29:12:-;;;:::i;412:::-;;;:::i;2656:313:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2656:313:11;-1:-1:-1;;;;;2656:313:11;;:::i;2202:78:14:-;;;:::i;920:33:12:-;;;:::i;1057:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1057:41:12;;:::i;535:153:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;535:153:14;;;;;;;;:::i;8015:183:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8015:183:11;;:::i;1169:55:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1169:55:12;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1169:55:12;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:21;;;:::i;716:33::-;;;-1:-1:-1;;;;;716:33:12;;:::o;1945:343:11:-;2035:12;;;;2034:13;2026:37;;;;;-1:-1:-1;;;2026:37:11;;;;;;;;;;;;-1:-1:-1;;;2026:37:11;;;;;;;;;;;;;;;2074:32;;;;;;;;;;;;;-1:-1:-1;;;2074:32:11;;;;;;;;;-1:-1:-1;;2074:32:11;:::i;:::-;-1:-1:-1;2137:1:11;2116:18;:22;2148:8;:20;;-1:-1:-1;;;;;2148:20:11;;;-1:-1:-1;;;;;;2148:20:11;;;;;;2178:6;:16;;;;;;;;;;;;;;;-1:-1:-1;2204:17:11;;-1:-1:-1;;;;2204:17:11;;;;;;-1:-1:-1;2231:21:11;;;;;;;2262:12;:19;;-1:-1:-1;;2262:19:11;;;;;;1945:343::o;8401:261::-;8553:6;;8507:4;8596:27;;;:14;:27;;;;;;;;:45;;;8546:109;;-1:-1:-1;;;8546:109:11;;-1:-1:-1;;;;;8596:45:11;;;8546:109;;;;;;8507:4;;8553:6;;8546:32;;:109;;;;;8596:27;;8546:109;;;;;;8553:6;8546:109;;;5:2:-1;;;;30:1;27;20:12;5:2;8546:109:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8546:109:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8546:109:11;;8401:261;-1:-1:-1;;8401:261:11:o;314:23:12:-;;;-1:-1:-1;;;;;314:23:12;;:::o;3326:2887:11:-;1481:9;;-1:-1:-1;;;1481:9:11;;;;:17;;1494:4;1481:17;:42;;;;-1:-1:-1;1502:13:11;;-1:-1:-1;;;1502:13:11;;;;:21;;1519:4;1502:21;1481:42;1460:159;;;;-1:-1:-1;;;1460:159:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:6;;1784:44;;;-1:-1:-1;;;1784:44:11;;1817:10;1784:44;;;;;;-1:-1:-1;;;;;1791:6:11;;;;1784:32;;:44;;;;;;;;;;;;;;;1791:6;1784:44;;;5:2:-1;;;;30:1;27;20:12;5:2;1784:44:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1784:44:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1784:44:11;1763:118;;;;;-1:-1:-1;;;1763:118:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:18;3630:19;3687:10;3699:13;3714:21;3737:17;3756:7;3765;3670:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3670:103:11;;;;;;;;;-1:-1:-1;;3670:103:11;;;;;;;;;;;;;;;-1:-1:-1;3670:103:11;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3670:103:11;;;;;-1:-1:-1;3670:103:11;;;26:21:-1;;;6:49;;3670:103:11;;;;;3660:114;;;;;;;;;-1:-1:-1;3789:22:11;;;:9;:22;;;;;;;3660:114;;-1:-1:-1;;3789:22:11;;3785:2334;;-1:-1:-1;3785:2334:11;;-1:-1:-1;;;;3785:2334:11;3850:6;;3843:54;;;-1:-1:-1;;;3843:54:11;;;;;;;;3886:10;3843:54;;;;;;-1:-1:-1;;;;;3850:6:11;;;;3843:29;;:54;;;;;;;;;;;;;;;3850:6;;3843:54;;;5:2:-1;;;;30:1;27;20:12;5:2;3843:54:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3843:54:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3843:54:11;;-1:-1:-1;3785:2334:11;;;3928:20;3962;4014:14;4000:10;:28;;;;;;;;;3996:1152;;;4088:10;;;4077:46;;-1:-1:-1;;;4077:46:11;;;;;;;;;;;;;;;;;4127:7;;-1:-1:-1;;;;;4088:10:11;;;;4077:37;;4115:7;;4077:46;;;;;;;;;;;;;;4088:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4077:46:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4077:46:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4077:46:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4077:46:11;:57;;4048:186;;;;-1:-1:-1;;;4048:186:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4312:10:11;;;4301:53;;-1:-1:-1;;;4301:53:11;;;;;;;;;;;;;;;;;4261:7;;-1:-1:-1;;;;;4312:10:11;;;;4301:44;;4261:7;;4301:53;;;;;;;;;;;;;;4312:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4301:53:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4301:53:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4301:53:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4301:53:11;;-1:-1:-1;3996:1152:11;;;4393:14;4379:10;:28;;;;;;;;;4375:773;;;4443:26;4436:43;;;;;;;;-1:-1:-1;;4436:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:26;;4436:43;;4443:26;4436:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:7;4436:6;:43::i;:::-;4562:10;;;4551:45;;-1:-1:-1;;;4551:45:11;;;;;;;;;;;;;;;;;4427:52;;-1:-1:-1;4522:26:11;;-1:-1:-1;;;;;4562:10:11;;;;4551:37;;4427:52;;4551:45;;;;;;;;;;;;;;4522:26;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4551:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4551:45:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4551:45:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4551:45:11;;-1:-1:-1;;;;;;4618:32:11;;4614:418;;4802:10;;;4791:51;;-1:-1:-1;;;4791:51:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4802:10:11;;;;4791:43;;4835:6;;4791:51;;;;;;;;;;;;;;4802:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4791:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4791:51:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4791:51:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4791:51:11;;-1:-1:-1;4614:418:11;;;4995:18;4980:33;;4614:418;4375:773;;;;5070:63;;-1:-1:-1;;;5070:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:773;5206:34;;:::i;:::-;5243:260;;;;;;;;5274:10;5243:260;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5243:260:11;;;;;;;5368:10;5243:260;;;;;;;;;;;;;;;;;;;;;;;;5475:14;5243:260;;5615:18;;5206:297;;-1:-1:-1;5615:25:11;;5638:1;5615:25;:22;:25;:::i;:::-;5594:18;:46;5654:27;;;;:14;:27;;;;;:43;;;;5684:13;;5654:27;:43;:27;;-1:-1:-1;;5654:43:11;;;;;;;;;;;;;;;-1:-1:-1;5654:43:11;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5654:43:11;;;;;;;;;-1:-1:-1;;;;;5654:43:11;;;-1:-1:-1;;;;;;5654:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5654:43:11;;;;;;;;;;;;;;;;;-1:-1:-1;;5654:43:11;;;;;;;;;;;;;;;;;;;5717:263;5754:11;5783:10;5811:13;5842:17;5877:10;5905:12;5935:6;5959:7;5717:263;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5717:263:11;-1:-1:-1;;;;;5717:263:11;;;;;;-1:-1:-1;;;;;5717:263:11;-1:-1:-1;;;;;5717:263:11;;;;;;-1:-1:-1;;;;;5717:263:11;-1:-1:-1;;;;;5717:263:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5717:263:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5717:263:11;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5717:263:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5995:22;;;;:9;:22;;;;;;;;:29;;-1:-1:-1;;5995:29:11;6020:4;5995:29;;;6061:6;;6054:54;;-1:-1:-1;;;6054:54:11;;;;;;;;6097:10;6054:54;;;;;;-1:-1:-1;;;;;6061:6:11;;;;6054:29;;:54;;;;;5995:22;;6054:54;;;;;;;;;6061:6;6054:54;;;5:2:-1;;;;30:1;27;20:12;5:2;6054:54:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6054:54:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6054:54:11;;-1:-1:-1;;;;3785:2334:11;6133:13;6129:78;;;6162:34;6184:11;6162:21;:34::i;:::-;1891:1;;3326:2887;;;;;;:::o;824:25:12:-;;;-1:-1:-1;;;824:25:12;;;;;:::o;224:108:14:-;-1:-1:-1;;;;;307:18:14;281:7;307:18;;;:9;:18;;;;;;;224:108::o;2332:276:11:-;1282:8;;-1:-1:-1;;;;;1282:8:11;1268:10;:22;1260:56;;;;;-1:-1:-1;;;1260:56:11;;;;;;;;;;;;-1:-1:-1;;;1260:56:11;;;;;;;;;;;;;;;2428:9;;-1:-1:-1;;;2428:9:11;;;;2427:10;2406:106;;;;-1:-1:-1;;;2406:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2523:9;:16;;-1:-1:-1;;;;;;;2523:16:11;;;;-1:-1:-1;;;;;;2549:16:11;-1:-1:-1;;;;;2549:16:11;;;;;;;;;;;2581:20;;;2594:6;;;;2581:20;;;;;;;;;;;;;2332:276;:::o;516:29:12:-;;;-1:-1:-1;;;;;516:29:12;;:::o;412:::-;;;-1:-1:-1;;;;;412:29:12;;:::o;2656:313:11:-;1282:8;;-1:-1:-1;;;;;1282:8:11;1268:10;:22;1260:56;;;;;-1:-1:-1;;;1260:56:11;;;;;;;;;;;;-1:-1:-1;;;1260:56:11;;;;;;;;;;;;;;;2760:13;;-1:-1:-1;;;2760:13:11;;;;2759:14;2738:115;;;;-1:-1:-1;;;2738:115:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2864:13;:20;;-1:-1:-1;;;;;;;2864:20:11;;;;-1:-1:-1;;;;;;2894:24:11;-1:-1:-1;;;;;2894:24:11;;;;;;;;;;;2934:28;;;2951:10;;;;2934:28;;;;;;;;;;;;;2656:313;:::o;2202:78:14:-;2242:31;2248:10;2260:12;2242:5;:31::i;:::-;2202:78::o;920:33:12:-;;;;:::o;1057:41::-;;;;;;;;;;;;;;;:::o;535:153:14:-;604:4;620:40;630:10;642:9;653:6;620:9;:40::i;:::-;-1:-1:-1;677:4:14;535:153;;;;:::o;8015:183:11:-;8112:4;8139:27;;;:14;:27;;;;;;;:34;;8177:14;;8139:34;;:52;;;;;;;;;;8015:183;-1:-1:-1;;8015:183:11:o;1169:55:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1169:55:12;;;;;;;;-1:-1:-1;1169:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1169:55:12;;;;;;;;;;;;;;;-1:-1:-1;1169:55:12;:::o;620:21::-;;;-1:-1:-1;;;620:21:12;;;;;:::o;8836:194:11:-;8945:13;9005:7;9014;8988:34;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;8988:34:11;;;;;;;;;;-1:-1:-1;8988:34:11;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8988:34:11;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8988:34:11;;;8974:49;;8836:194;;;;:::o;834:176:22:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:22:o;6493:455:11:-;6580:11;1041:34;1063:11;1041:21;:34::i;:::-;1020:109;;;;;-1:-1:-1;;;1020:109:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;6607:27;;;;:14;:27;;;;;;;;:34;;;:51;;-1:-1:-1;;6607:51:11;6644:14;6607:51;;;;;;6691:37;;;;;6607:51;;6691:37;;6742:27;;;;;;;;6738:144;;;6785:25;6798:11;6785:12;:25::i;:::-;6738:144;;;6841:30;6859:11;6841:17;:30::i;:::-;6897:44;6918:11;6931:9;6897:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:1;6493:455;;:::o;1802:244:14:-;-1:-1:-1;;;;;1877:21:14;;1869:65;;;;;-1:-1:-1;;;1869:65:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:12;;;:21;;1945:36;;-1:-1:-1;;;;;2012:18:14;;;-1:-1:-1;2012:18:14;;;:9;:18;;;;;;;:27;;;1991:48;;1802:244::o;1166:366::-;-1:-1:-1;;;;;1263:20:14;;1255:70;;;;-1:-1:-1;;;1255:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1343:23:14;;1335:71;;;;-1:-1:-1;;;1335:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17:14;;;;;;;:9;:17;;;;;;;;:26;;;1417:46;;1496:20;;;;;;;;;;:29;;;1473:52;;1166:366::o;7593:295:11:-;7655:34;;:::i;:::-;7692:27;;;;:14;:27;;;;;;;7655:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7655:64:11;;;-1:-1:-1;;7655:64:11;;;;;-1:-1:-1;;;;;7655:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7655:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7655:64:11;;;-1:-1:-1;;7655:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7741:10:11;;;7773:30;;;;;7817:20;;;;7851;;;;7730:151;;-1:-1:-1;;;7730:151:11;;-1:-1:-1;;;;;7730:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7655:64;;-1:-1:-1;7741:10:11;;;7730:29;;7773:30;;7817:20;;7851;7730:151;;;;;;;;;;;;7741:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7730:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7730:151:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7730:151:11;;;;7593:295;;:::o;7074:390::-;7141:34;;:::i;:::-;7178:27;;;;:14;:27;;;;;;;7141:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7141:64:11;;;-1:-1:-1;;7141:64:11;;;;;-1:-1:-1;;;;;7141:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7141:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7141:64:11;;;-1:-1:-1;;7141:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7227:10;;;;;;;;;-1:-1:-1;;;;;7227:10:11;-1:-1:-1;;;;;7216:39:11;;7269:13;:26;;;7309:13;:30;;;7353:13;:26;;;7393:13;:20;;;7427:13;:20;;;7216:241;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:241:11;-1:-1:-1;;;;;7216:241:11;;;;;;-1:-1:-1;;;;;7216:241:11;-1:-1:-1;;;;;7216:241:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7216:241:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7216:241:11;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7216:241:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2133:149:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:149:14;;;-1:-1:-1;2133:149:14;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;2133:149:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./../CosmosBridge.sol\";\n\ncontract ERC20UNSAFE {\n    uint256 private _totalSupply;\n    mapping (address => uint256) private _balances;\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n        /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender] - amount;\n        _balances[recipient] = _balances[recipient] + amount;\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply + amount;\n        _balances[account] = _balances[account] + amount;\n    }\n}\n\n\n/// @notice Add a token to the cosmos bridge to test that upgrades work correctly\ncontract MockCosmosBridgeUpgrade is CosmosBridge, ERC20UNSAFE {\n\n    function tokenFaucet() public {\n        _mint(msg.sender, 100000000000);\n    }\n}",
  "sourcePath": "/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
  "ast": {
    "absolutePath": "/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
    "exportedSymbols": {
      "ERC20UNSAFE": [
        2133
      ],
      "MockCosmosBridgeUpgrade": [
        2148
      ]
    },
    "id": 2149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol",
        "file": "./../CosmosBridge.sol",
        "id": 2014,
        "nodeType": "ImportDirective",
        "scope": 2149,
        "sourceUnit": 1896,
        "src": "25:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2133,
        "linearizedBaseContracts": [
          2133
        ],
        "name": "ERC20UNSAFE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2016,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2133,
            "src": "85:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2020,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 2133,
            "src": "119:46:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2019,
              "keyType": {
                "id": 2017,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2018,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "290:42:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2027,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2020,
                      "src": "307:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2029,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2028,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "317:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "307:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2030,
                  "nodeType": "Return",
                  "src": "300:25:14"
                }
              ]
            },
            "documentation": "@dev See {IERC20-balanceOf}.",
            "id": 2032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "243:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:17:14"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "281:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:9:14"
            },
            "scope": 2133,
            "src": "224:108:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "610:78:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2042,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4004,
                          "src": "630:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "630:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2044,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "642:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2045,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "653:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2041,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2099,
                      "src": "620:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "620:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "677:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2040,
                  "id": 2049,
                  "nodeType": "Return",
                  "src": "670:11:14"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 2051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2034,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "553:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2036,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "572:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:14"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "604:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:6:14"
            },
            "scope": 2133,
            "src": "535:153:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "1245:287:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "1263:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1263:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:39:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1255:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:70:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2070,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1343:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1343:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1368:37:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1335:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:71:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2077,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:71:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1417:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2080,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "1427:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1417:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2081,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1437:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2083,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2082,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "1447:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1437:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2084,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "1457:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1437:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1417:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2088,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1473:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2090,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2089,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "1483:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2091,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1496:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2093,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2092,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1506:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1496:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2094,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "1519:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1496:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1473:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:52:14"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 2099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1185:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1201:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1220:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:51:14"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:14"
            },
            "scope": 2133,
            "src": "1166:366:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2131,
              "nodeType": "Block",
              "src": "1859:187:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2107,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "1877:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1877:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:33:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1869:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:65:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:65:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2115,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "1945:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2116,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "1960:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "1975:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1960:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1945:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2121,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1991:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2123,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2122,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "2001:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1991:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2124,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "2012:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2126,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2125,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "2022:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2012:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "2033:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2012:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1991:48:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:48:14"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 2132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "1817:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "1834:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:33:14"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:14"
            },
            "scope": 2133,
            "src": "1802:244:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2149,
        "src": "58:1990:14"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2134,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1895,
              "src": "2169:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$1895",
                "typeString": "contract CosmosBridge"
              }
            },
            "id": 2135,
            "nodeType": "InheritanceSpecifier",
            "src": "2169:12:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2136,
              "name": "ERC20UNSAFE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2133,
              "src": "2183:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20UNSAFE_$2133",
                "typeString": "contract ERC20UNSAFE"
              }
            },
            "id": 2137,
            "nodeType": "InheritanceSpecifier",
            "src": "2183:11:14"
          }
        ],
        "contractDependencies": [
          1895,
          1954,
          2133
        ],
        "contractKind": "contract",
        "documentation": "@notice Add a token to the cosmos bridge to test that upgrades work correctly",
        "fullyImplemented": true,
        "id": 2148,
        "linearizedBaseContracts": [
          2148,
          2133,
          1895,
          1954
        ],
        "name": "MockCosmosBridgeUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2146,
              "nodeType": "Block",
              "src": "2232:48:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4004,
                          "src": "2248:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2248:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:12:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "id": 2140,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "2242:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:31:14"
                }
              ]
            },
            "documentation": null,
            "id": 2147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFaucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:14"
            },
            "returnParameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:14"
            },
            "scope": 2148,
            "src": "2202:78:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2149,
        "src": "2133:149:14"
      }
    ],
    "src": "0:2282:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/MockUpgrade/MockCosmsosBridgeUpgrade.sol",
    "exportedSymbols": {
      "ERC20UNSAFE": [
        2133
      ],
      "MockCosmosBridgeUpgrade": [
        2148
      ]
    },
    "id": 2149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/rudiyardley/go/src/github.com/Sifchain/sifnode/smart-contracts/contracts/CosmosBridge.sol",
        "file": "./../CosmosBridge.sol",
        "id": 2014,
        "nodeType": "ImportDirective",
        "scope": 2149,
        "sourceUnit": 1896,
        "src": "25:31:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2133,
        "linearizedBaseContracts": [
          2133
        ],
        "name": "ERC20UNSAFE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2016,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2133,
            "src": "85:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2020,
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 2133,
            "src": "119:46:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2019,
              "keyType": {
                "id": 2017,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:28:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2018,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "139:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "290:42:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2027,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2020,
                      "src": "307:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2029,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2028,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "317:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "307:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2030,
                  "nodeType": "Return",
                  "src": "300:25:14"
                }
              ]
            },
            "documentation": "@dev See {IERC20-balanceOf}.",
            "id": 2032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "243:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:17:14"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "281:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:9:14"
            },
            "scope": 2133,
            "src": "224:108:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "610:78:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2042,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4004,
                          "src": "630:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "630:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2044,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "642:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2045,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "653:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2041,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2099,
                      "src": "620:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "620:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "677:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2040,
                  "id": 2049,
                  "nodeType": "Return",
                  "src": "670:11:14"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "id": 2051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2034,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "553:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2036,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "572:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:14"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "604:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:6:14"
            },
            "scope": 2133,
            "src": "535:153:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "1245:287:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "1263:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1263:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:39:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1255:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:70:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2070,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1343:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1356:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1343:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1368:37:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1335:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:71:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2077,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:71:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1417:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2080,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2079,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2053,
                        "src": "1427:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1417:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2081,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1437:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2083,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2082,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "1447:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1437:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2084,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "1457:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1437:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1417:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2088,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1473:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2090,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2089,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2055,
                        "src": "1483:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2091,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "1496:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2093,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2092,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "1506:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1496:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2094,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "1519:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1496:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1473:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:52:14"
                }
              ]
            },
            "documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
            "id": 2099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1185:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2055,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1201:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2057,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "1220:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1184:51:14"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:14"
            },
            "scope": 2133,
            "src": "1166:366:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2131,
              "nodeType": "Block",
              "src": "1859:187:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2107,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "1877:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1896:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1888:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1877:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:33:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4007,
                        4008
                      ],
                      "referencedDeclaration": 4008,
                      "src": "1869:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:65:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:65:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2115,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "1945:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2116,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2016,
                        "src": "1960:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "1975:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1960:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1945:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2120,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2121,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "1991:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2123,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2122,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2101,
                        "src": "2001:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1991:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2124,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2020,
                          "src": "2012:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2126,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2125,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "2022:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2012:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2103,
                        "src": "2033:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2012:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1991:48:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:48:14"
                }
              ]
            },
            "documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
            "id": 2132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "1817:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "1834:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:33:14"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:14"
            },
            "scope": 2133,
            "src": "1802:244:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2149,
        "src": "58:1990:14"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2134,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1895,
              "src": "2169:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$1895",
                "typeString": "contract CosmosBridge"
              }
            },
            "id": 2135,
            "nodeType": "InheritanceSpecifier",
            "src": "2169:12:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2136,
              "name": "ERC20UNSAFE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2133,
              "src": "2183:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20UNSAFE_$2133",
                "typeString": "contract ERC20UNSAFE"
              }
            },
            "id": 2137,
            "nodeType": "InheritanceSpecifier",
            "src": "2183:11:14"
          }
        ],
        "contractDependencies": [
          1895,
          1954,
          2133
        ],
        "contractKind": "contract",
        "documentation": "@notice Add a token to the cosmos bridge to test that upgrades work correctly",
        "fullyImplemented": true,
        "id": 2148,
        "linearizedBaseContracts": [
          2148,
          2133,
          1895,
          1954
        ],
        "name": "MockCosmosBridgeUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2146,
              "nodeType": "Block",
              "src": "2232:48:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4004,
                          "src": "2248:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2248:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2260:12:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        },
                        "value": "100000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000_by_1",
                          "typeString": "int_const 100000000000"
                        }
                      ],
                      "id": 2140,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "2242:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:31:14"
                }
              ]
            },
            "documentation": null,
            "id": 2147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFaucet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:14"
            },
            "returnParameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:14"
            },
            "scope": 2148,
            "src": "2202:78:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2149,
        "src": "2133:149:14"
      }
    ],
    "src": "0:2282:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-30T12:01:02.612Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "Add a token to the cosmos bridge to test that upgrades work correctly"
  }
}